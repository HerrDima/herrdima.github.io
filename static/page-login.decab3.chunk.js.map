{"version":3,"file":"page-login.decab3.chunk.js","mappings":"wMAUM,SAAUA,IACZ,MAAMC,GAAcC,EAAAA,EAAAA,OACbC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,KACpCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAiB,IAC3CG,GAAYC,EAAAA,EAAAA,IAAwEC,EAAAA,GAEpFC,GAAWC,EAAAA,EAAAA,cACZC,IACGA,EAAIC,iBAEJN,EACKO,QAAQZ,EAAOG,GACfU,MAAMC,IACH,MAAM,KAACC,GAAQD,EAEfhB,EAAYkB,QAAQD,EAAK,IAE5BE,MAAMC,EAAAA,GAAW,GAE1B,CAAClB,EAAOG,EAAUE,EAAWP,IAGjC,OACIqB,EAAAA,EAAAA,MAAA,QAAMC,OAAQC,EAAAA,GAAOrB,MAAOQ,SAAUA,EAAQc,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,OAAAD,SAAME,KAAKC,UAAU3B,EAAa,KAAM,MACxCyB,EAAAA,EAAAA,KAAA,OAAAD,SAAME,KAAKC,UAAUpB,EAAW,KAAM,MAEtCc,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAA,WACAC,EAAAA,EAAAA,KAAA,SACIG,QAAUhB,IACNT,EAASS,EAAIiB,cAAcC,MAAM,EAErCC,YAAY,QACZC,KAAK,aAGbX,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAA,cACAC,EAAAA,EAAAA,KAAA,SACIG,QAAUhB,IACNN,EAAYM,EAAIiB,cAAcC,MAAM,EAExCC,YAAY,WACZC,KAAK,YAIZzB,EAAU0B,OAAQR,EAAAA,EAAAA,KAAA,MAAAD,SAAA,gBAAuB,OAE1CC,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAAQR,SAAA,aAGjC,C","sources":["webpack://min-svenska/./www/page/service/login/login.tsx"],"sourcesContent":["/* global HTMLFormElement, HTMLInputElement */\nimport {SyntheticEvent, useCallback, useState} from 'react';\n\nimport {useUserContext} from '../../../provider/user/user-context';\nimport {useMakeExecutableState} from '../../../util/function';\nimport {LoginResponseType} from '../../../service/auth/auth-type';\nimport {loginUser} from '../../../service/auth/auth-api';\nimport {throwError} from '../../../util/error';\nimport {apiUrl} from '../../../../server/const';\n\nexport function Login(): JSX.Element {\n    const userContext = useUserContext();\n    const [login, setLogin] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const loginHook = useMakeExecutableState<Parameters<typeof loginUser>, LoginResponseType>(loginUser);\n\n    const onSubmit = useCallback(\n        (evt: SyntheticEvent<HTMLFormElement>) => {\n            evt.preventDefault();\n\n            loginHook\n                .execute(login, password)\n                .then((loginResponse: LoginResponseType) => {\n                    const {user} = loginResponse;\n\n                    userContext.setUser(user);\n                })\n                .catch(throwError);\n        },\n        [login, password, loginHook, userContext]\n    );\n\n    return (\n        <form action={apiUrl.login} onSubmit={onSubmit}>\n            <pre>{JSON.stringify(userContext, null, 4)}</pre>\n            <pre>{JSON.stringify(loginHook, null, 4)}</pre>\n\n            <label>\n                <p>login</p>\n                <input\n                    onInput={(evt: SyntheticEvent<HTMLInputElement>) => {\n                        setLogin(evt.currentTarget.value);\n                    }}\n                    placeholder=\"login\"\n                    type=\"text\"\n                />\n            </label>\n            <label>\n                <p>password</p>\n                <input\n                    onInput={(evt: SyntheticEvent<HTMLInputElement>) => {\n                        setPassword(evt.currentTarget.value);\n                    }}\n                    placeholder=\"password\"\n                    type=\"text\"\n                />\n            </label>\n\n            {loginHook.error ? <h3>ERROR login</h3> : '???'}\n\n            <br />\n\n            <button type=\"submit\">submit</button>\n        </form>\n    );\n}\n"],"names":["Login","userContext","useUserContext","login","setLogin","useState","password","setPassword","loginHook","useMakeExecutableState","loginUser","onSubmit","useCallback","evt","preventDefault","execute","then","loginResponse","user","setUser","catch","throwError","_jsxs","action","apiUrl","children","_jsx","JSON","stringify","onInput","currentTarget","value","placeholder","type","error"],"sourceRoot":""}