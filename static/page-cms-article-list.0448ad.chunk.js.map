{"version":3,"file":"page-cms-article-list.0448ad.chunk.js","mappings":"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","sources":["webpack://min-svenska/./www/layout/box/box-helper.ts","webpack://min-svenska/./www/layout/box/box.tsx","webpack://min-svenska/./www/page/cms/cms-article-list/cms-article-list-type.ts","webpack://min-svenska/./www/page/cms/cms-article-list/cms-article-list-const.tsx","webpack://min-svenska/./www/page/cms/cms-article-list/cms-article-list.tsx","webpack://min-svenska/./www/page/cms/cms-article/cms-article-const.ts","webpack://min-svenska/./www/page/cms/cms-article/cms-article-helper.tsx","webpack://min-svenska/./www/page/cms/layout/cms-page/cms-page.tsx"],"sourcesContent":["// eslint-disable-next-line complexity\nexport function makeCssArray(value?: Array<number> | number): [number, number, number, number] {\n    if (typeof value === 'number') {\n        return [value, value, value, value];\n    }\n\n    if (!Array.isArray(value)) {\n        return [0, 0, 0, 0];\n    }\n\n    const arrayLength = value.length;\n\n    switch (arrayLength) {\n        case 0: {\n            return [0, 0, 0, 0];\n        }\n        case 1: {\n            return [value[0], value[0], value[0], value[0]];\n        }\n        case 2: {\n            return [value[0], value[1], value[0], value[1]];\n        }\n        case 3: {\n            return [value[0], value[1], value[2], value[1]];\n        }\n        case 4: {\n            return [value[0], value[1], value[2], value[3]];\n        }\n        default: {\n            console.error('makeCssArray: too big array');\n            return [value[0], value[1], value[2], value[3]];\n        }\n    }\n}\n","import {ReactNode, ElementType, CSSProperties} from 'react';\n\nimport {makeCssArray} from './box-helper';\n\ntype BoxPropsType = {\n    backgroundColor?: string;\n    boxSizing?: 'border-box' | 'content-box' | 'initial';\n    children?: ReactNode;\n    display?: 'block' | 'flex' | 'inline';\n    height?: number | string;\n    margin?: Array<number> | number;\n    padding?: Array<number> | number;\n    tagName?: ElementType;\n    width?: number | string;\n};\n\nexport function Box(props: BoxPropsType): JSX.Element {\n    const {\n        tagName: TagName = 'div',\n        children,\n        margin,\n        padding,\n        width,\n        height,\n        boxSizing,\n        backgroundColor,\n        display,\n    } = props;\n\n    const [marginTop, marginRight, marginBottom, marginLeft, paddingTop, paddingRight, paddingBottom, paddingLeft] = [\n        ...makeCssArray(margin),\n        ...makeCssArray(padding),\n    ].map((value: number): string => `${value}px`);\n\n    const style: CSSProperties = {\n        backgroundColor,\n        boxSizing,\n        display,\n        height,\n        marginBottom,\n        marginLeft,\n        marginRight,\n        marginTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight,\n        paddingTop,\n        width,\n    };\n\n    return <TagName style={style}>{children}</TagName>;\n}\n","import {ArticleType} from '../../../../server/article/article-type';\n\nexport const enum SortDirectionEnum {\n    ascend = 'ascend',\n    descend = 'descend',\n}\n\nexport type ArticleForTableListKeysType =\n    | 'articleType'\n    | 'createdDate'\n    | 'id'\n    | 'isActive'\n    | 'publishDate'\n    | 'slug'\n    | 'title'\n    | 'titleImage'\n    | 'updatedDate';\nexport type ArticleForTableListType = Pick<ArticleType, ArticleForTableListKeysType>;\nexport type KeyForTableListListType = [\n    'articleType',\n    'createdDate',\n    'id',\n    'isActive',\n    'publishDate',\n    'slug',\n    'title',\n    'titleImage',\n    'updatedDate'\n];\n","/* global HTMLInputElement, setTimeout */\nimport {SyntheticEvent, useEffect, useRef} from 'react';\nimport {Input} from 'antd';\nimport type {InputRef} from 'antd';\nimport {ColumnType, FilterDropdownProps} from 'antd/es/table/interface';\nimport {SearchOutlined} from '@ant-design/icons';\nimport {Link} from 'react-router-dom';\n\nimport {getArticleLinkToEdit} from '../cms-article/cms-article-helper';\nimport {getTickCross} from '../../../util/string';\nimport {dateIsoToHumanView} from '../../../util/time';\nimport {getArticleLinkToViewClient} from '../../../client-component/article/article-helper';\nimport {ArticleFileType} from '../../../../server/article/article-type';\nimport {getPathToImage} from '../../../util/path';\n\nimport {\n    ArticleForTableListKeysType,\n    ArticleForTableListType,\n    KeyForTableListListType,\n    SortDirectionEnum,\n} from './cms-article-list-type';\n\ntype GetArticleTableColumnListArgumentType = {\n    setSearchText: (searchText: string) => void;\n    setSearchedColumn: (dataIndex: ArticleForTableListKeysType) => void;\n};\n\nexport function getArticleTableColumnList(\n    data: GetArticleTableColumnListArgumentType\n): Array<ColumnType<ArticleForTableListType>> {\n    const {setSearchedColumn, setSearchText} = data;\n\n    const articleTableColumnList: Array<ColumnType<ArticleForTableListType>> = [\n        /*\n        {\n            dataIndex: 'id',\n            defaultSortOrder: null,\n            key: 'id',\n            sorter: () => 0,\n            title: 'Id',\n        },\n    */\n        {\n            dataIndex: 'title',\n            defaultSortOrder: SortDirectionEnum.ascend,\n            // eslint-disable-next-line react/no-multi-comp\n            filterDropdown: (filterProps: FilterDropdownProps): JSX.Element => {\n                const {visible} = filterProps;\n                // eslint-disable-next-line react-hooks/rules-of-hooks\n                const inputRef = useRef<InputRef>(null);\n\n                // eslint-disable-next-line react-hooks/rules-of-hooks\n                useEffect(() => {\n                    if (visible) {\n                        // wait until the input appears\n                        setTimeout(() => {\n                            inputRef.current?.focus({cursor: 'start'});\n                        }, 100);\n                    }\n                }, [visible]);\n\n                return (\n                    <Input\n                        key=\"title\"\n                        onInput={(evt: SyntheticEvent<HTMLInputElement>) => {\n                            setSearchedColumn('title');\n                            setSearchText(evt.currentTarget.value.trim());\n                        }}\n                        placeholder=\"Search...\"\n                        ref={inputRef}\n                    />\n                );\n            },\n            filterIcon: <SearchOutlined />,\n            key: 'title',\n            render(title: string, article: ArticleForTableListType) {\n                return (\n                    <Link key={article.id} to={getArticleLinkToViewClient(article.slug)}>\n                        {title}\n                    </Link>\n                );\n            },\n            sorter: () => 0,\n            title: 'Title',\n        },\n        {\n            dataIndex: 'slug',\n            defaultSortOrder: null,\n            // eslint-disable-next-line react/no-multi-comp\n            filterDropdown: (filterProps: FilterDropdownProps): JSX.Element => {\n                const {visible} = filterProps;\n                // eslint-disable-next-line react-hooks/rules-of-hooks\n                const inputRef = useRef<InputRef>(null);\n\n                // eslint-disable-next-line react-hooks/rules-of-hooks\n                useEffect(() => {\n                    if (visible) {\n                        // wait until the input appears\n                        setTimeout(() => {\n                            inputRef.current?.focus({cursor: 'start'});\n                        }, 100);\n                    }\n                }, [visible]);\n\n                return (\n                    <Input\n                        key=\"slug\"\n                        onInput={(evt: SyntheticEvent<HTMLInputElement>) => {\n                            setSearchedColumn('slug');\n                            setSearchText(evt.currentTarget.value);\n                        }}\n                        placeholder=\"Search...\"\n                        ref={inputRef}\n                    />\n                );\n            },\n            filterIcon: <SearchOutlined />,\n            key: 'slug',\n            render(slug: string, article: ArticleForTableListType) {\n                return (\n                    <Link key={article.id} to={getArticleLinkToEdit(article.id)}>\n                        {slug}\n                    </Link>\n                );\n            },\n            sorter: () => 0,\n            title: 'Slug/edit',\n        },\n        {\n            dataIndex: 'articleType',\n            defaultSortOrder: null,\n            key: 'articleType',\n            sorter: () => 0,\n            title: 'Type',\n        },\n        {\n            align: 'center',\n            dataIndex: 'isActive',\n            defaultSortOrder: null,\n            key: 'isActive',\n            render(\n                isActive: boolean\n                // article: ArticleForTableListType\n            ) {\n                return getTickCross(isActive);\n            },\n            sorter: () => 0,\n            title: 'Is active',\n        },\n        {\n            align: 'center',\n            dataIndex: 'titleImage',\n            defaultSortOrder: null,\n            key: 'titleImage',\n            render(imageFile: ArticleFileType) {\n                return (\n                    <img\n                        alt={imageFile.name}\n                        height=\"64px\"\n                        src={getPathToImage(imageFile.name, {height: 64, width: 64})}\n                        style={{objectFit: 'contain'}}\n                        width=\"64px\"\n                    />\n                );\n            },\n            sorter: () => 0,\n            title: 'Image',\n        },\n        {\n            align: 'right',\n            dataIndex: 'createdDate',\n            defaultSortOrder: null,\n            key: 'createdDate',\n            render: dateIsoToHumanView,\n            sorter: () => 0,\n            title: 'Created UTC-0',\n            width: 120,\n        },\n        {\n            align: 'right',\n            dataIndex: 'updatedDate',\n            defaultSortOrder: null,\n            key: 'updatedDate',\n            render: dateIsoToHumanView,\n            sorter: () => 0,\n            title: 'Updated UTC-0',\n            width: 120,\n        },\n        {\n            align: 'right',\n            dataIndex: 'publishDate',\n            defaultSortOrder: null,\n            key: 'publishDate',\n            render: dateIsoToHumanView,\n            sorter: () => 0,\n            title: 'Publish UTC-0',\n            width: 120,\n        },\n    ];\n\n    return articleTableColumnList;\n}\n\nexport const keyForTableListList: KeyForTableListListType = [\n    'articleType',\n    'createdDate',\n    'id',\n    'isActive',\n    'publishDate',\n    'slug',\n    'title',\n    'titleImage',\n    'updatedDate',\n];\n","import {useEffect, useState} from 'react';\nimport {Table, Typography} from 'antd';\nimport {TablePaginationConfig, FilterValue, SorterResult, TableCurrentDataSource} from 'antd/es/table/interface';\n\nimport {useMakeExecutableState} from '../../../util/function';\nimport {PaginationQueryType, PaginationResultType} from '../../../../server/data-base/data-base-type';\nimport {getArticleListPaginationPick} from '../../../service/article/article-api';\nimport {CmsPage} from '../layout/cms-page/cms-page';\nimport {makeSafeRegExp} from '../../../util/regexp';\n\nimport {getArticleTableColumnList, keyForTableListList} from './cms-article-list-const';\nimport {ArticleForTableListKeysType, ArticleForTableListType, SortDirectionEnum} from './cms-article-list-type';\n\nconst {Title} = Typography;\n\nexport function CmsArticleList(): JSX.Element {\n    const defaultPageSize = 10;\n    const [searchedColumn, setSearchedColumn] = useState<ArticleForTableListKeysType>('title');\n    const [searchText, setSearchText] = useState<string>('');\n\n    // article for table\n    const {\n        execute: executeArticleList,\n        result: resultArticleList,\n        isInProgress: isInProgressArticleList,\n    } = useMakeExecutableState<\n        Parameters<typeof getArticleListPaginationPick<keyof ArticleForTableListType>>,\n        PaginationResultType<ArticleForTableListType>\n    >(getArticleListPaginationPick);\n\n    const [paginationArticleList, setPaginationArticleList] = useState<PaginationQueryType<ArticleForTableListType>>({\n        pageConfig: {\n            pageIndex: 0,\n            pageSize: defaultPageSize,\n            sort: {title: 1},\n        },\n        query: {},\n    });\n\n    useEffect(() => {\n        executeArticleList(paginationArticleList.query, paginationArticleList.pageConfig, keyForTableListList);\n    }, [executeArticleList, paginationArticleList]);\n\n    useEffect(() => {\n        setPaginationArticleList(\n            (\n                currentPagination: PaginationQueryType<ArticleForTableListType>\n            ): PaginationQueryType<ArticleForTableListType> => {\n                const rawDirection = String({...currentPagination.pageConfig.sort}[String(searchedColumn)]);\n                const sortDirection = rawDirection === SortDirectionEnum.descend ? -1 : 1;\n                const {pageSize} = currentPagination.pageConfig;\n\n                return {\n                    pageConfig: {\n                        pageIndex: 0,\n                        pageSize,\n                        sort: {[String(searchedColumn)]: sortDirection},\n                    },\n                    query: {[searchedColumn]: makeSafeRegExp(searchText, 'i').toString()},\n                };\n            }\n        );\n    }, [searchedColumn, searchText]);\n\n    // eslint-disable-next-line complexity, max-statements\n    function handleTableChange(\n        pagination: TablePaginationConfig,\n        filters: Record<string, FilterValue | null>,\n        sorter: Array<SorterResult<ArticleForTableListType>> | SorterResult<ArticleForTableListType>,\n        extra: TableCurrentDataSource<ArticleForTableListType>\n    ) {\n        const firstSorter: SorterResult<ArticleForTableListType> | void = Array.isArray(sorter) ? sorter[0] : sorter;\n\n        if (!firstSorter) {\n            console.warn('handleTableChange - NO firstSorter');\n            return;\n        }\n\n        const {column, order, field, columnKey} = firstSorter;\n        const sortDirection = order === SortDirectionEnum.descend ? -1 : 1;\n\n        const pageIndex = (pagination.current || 1) - 1;\n        const pageSize = pagination.pageSize || defaultPageSize;\n\n        setPaginationArticleList((): PaginationQueryType<ArticleForTableListType> => {\n            return {\n                pageConfig: {\n                    pageIndex,\n                    pageSize,\n                    sort: {[String(field)]: sortDirection},\n                },\n                query: {[searchedColumn]: makeSafeRegExp(searchText, 'i').toString()},\n            };\n        });\n\n        console.log('handleTableChange');\n        console.log('pagination:', pagination);\n        console.log('filters:', filters);\n        console.log('column:', column);\n        console.log('sorter:', sorter);\n        console.log('order:', order);\n        console.log('columnKey:', columnKey);\n        console.log('extra:', extra);\n        console.log('///');\n        console.log(searchedColumn);\n        console.log(searchText);\n        console.log('///');\n    }\n\n    return (\n        <CmsPage>\n            <Title level={2}>Article list</Title>\n\n            <Table<ArticleForTableListType>\n                columns={getArticleTableColumnList({setSearchText, setSearchedColumn})}\n                dataSource={resultArticleList?.list || []}\n                loading={isInProgressArticleList}\n                onChange={handleTableChange}\n                pagination={{\n                    current: paginationArticleList.pageConfig.pageIndex + 1,\n                    defaultPageSize,\n                    hideOnSinglePage: false,\n                    pageSize: paginationArticleList.pageConfig.pageSize,\n                    pageSizeOptions: [defaultPageSize, 50, 100, 500, 1000, 2000, 5000],\n                    showSizeChanger: true,\n                    total: resultArticleList?.totalItemCount || 0,\n                }}\n                rowKey=\"id\"\n            />\n        </CmsPage>\n    );\n}\n","import {KeyForValidationListType} from './cms-article-type';\n\nexport const enum CmsArticleModeEnum {\n    create = 'create',\n    edit = 'edit',\n}\n\nexport const keyForValidationList: KeyForValidationListType = ['id', 'slug', 'subDocumentIdList', 'title'];\nexport const noDateUTC = '0000-00-00T00:00:00.000Z';\n\nexport const imageAccept = 'image/png, image/jpeg, image/gif, image/webp';\nexport const fileAccept = `${imageAccept}, audio/mp3, audio/wav`;\nexport const imageFileSizeLimit = 16e6;\nexport const fileSizeLimit = 75e6;\n","/* global document, Image, HTMLImageElement, Audio, HTMLAudioElement, HTMLVideoElement, File, FormData, location */\nimport {Rule, RuleObject} from 'rc-field-form/lib/interface';\n\nimport {generatePath} from '../../../util/url';\nimport {textToSlug} from '../../../util/human';\nimport {appRoute} from '../../../component/app/app-route';\nimport {PromiseResolveType} from '../../../util/promise';\nimport {apiUrl} from '../../../../server/const';\nimport {FetchMethodEnum, fetchX} from '../../../util/fetch';\nimport {deleteArticle} from '../../../service/article/article-api';\nimport {ArticleFileType, ArticleFileTypeEnum} from '../../../../server/article/article-type';\nimport {makeArticleFileSchema} from '../../../../server/article/article-validation';\nimport {NeverError} from '../../../util/error';\n\nimport {getPathToFile} from '../../../util/path';\n\nimport {ArticleForValidationType, MakeSlugValidatorArgumentType} from './cms-article-type';\nimport {CmsArticleModeEnum} from './cms-article-const';\n\nexport function fetchImage(pathToImage: string): Promise<HTMLImageElement> {\n    const image = new Image();\n\n    return new Promise<HTMLImageElement>(\n        (resolve: PromiseResolveType<HTMLImageElement>, reject: PromiseResolveType<unknown>) => {\n            image.addEventListener('load', () => resolve(image), false);\n\n            image.addEventListener('error', reject, false);\n\n            image.src = pathToImage;\n        }\n    );\n}\n\nexport function fetchAudio(pathToAudio: string): Promise<HTMLAudioElement> {\n    const audio = new Audio();\n\n    return new Promise<HTMLAudioElement>(\n        (resolve: PromiseResolveType<HTMLAudioElement>, reject: PromiseResolveType<unknown>) => {\n            audio.addEventListener('loadedmetadata', () => resolve(audio), false);\n\n            audio.addEventListener('error', reject, false);\n\n            audio.preload = 'metadata';\n            audio.src = pathToAudio;\n        }\n    );\n}\n\nexport function fetchVideo(pathToVideo: string): Promise<HTMLVideoElement> {\n    const video: HTMLVideoElement = document.createElement('video');\n\n    return new Promise<HTMLVideoElement>(\n        (resolve: PromiseResolveType<HTMLVideoElement>, reject: PromiseResolveType<unknown>) => {\n            video.addEventListener('loadedmetadata', () => resolve(video), false);\n\n            video.addEventListener('error', reject, false);\n\n            video.preload = 'metadata';\n            video.src = pathToVideo;\n        }\n    );\n}\n\n// eslint-disable-next-line complexity\nexport async function uploadFile(file: File, fileSizeLimitBytes: number): Promise<ArticleFileType> {\n    const formData = new FormData();\n\n    if (file.size >= fileSizeLimitBytes) {\n        throw new Error(`Too big file, limit ${fileSizeLimitBytes / 1e6}MB`);\n    }\n\n    formData.append('file', file);\n\n    const fileInfo: ArticleFileType = await fetchX<ArticleFileType>(apiUrl.adminFileUpload, makeArticleFileSchema(), {\n        body: formData,\n        credentials: 'include',\n        method: FetchMethodEnum.post,\n    });\n\n    const pathToFile = getPathToFile(fileInfo.name);\n\n    switch (fileInfo.type) {\n        case ArticleFileTypeEnum.image: {\n            const {naturalHeight, naturalWidth} = await fetchImage(pathToFile);\n\n            return {\n                ...fileInfo,\n                height: naturalHeight,\n                width: naturalWidth,\n            };\n        }\n        case ArticleFileTypeEnum.audio: {\n            const {duration} = await fetchAudio(pathToFile);\n\n            return {\n                ...fileInfo,\n                duration,\n            };\n        }\n\n        case ArticleFileTypeEnum.video: {\n            const {duration, videoWidth, videoHeight} = await fetchVideo(pathToFile);\n\n            return {\n                ...fileInfo,\n                duration,\n                height: videoHeight,\n                width: videoWidth,\n            };\n        }\n\n        case ArticleFileTypeEnum.unknown: {\n            return fileInfo;\n        }\n\n        default: {\n            throw new NeverError(fileInfo.type);\n        }\n    }\n\n    // eslint-disable-next-line no-unreachable\n    return fileInfo;\n}\n\nexport function makeSlugValidator(data: MakeSlugValidatorArgumentType): Array<Rule> {\n    const {id, mode, savedArticleList} = data;\n\n    return [\n        {\n            message: 'Required!',\n            required: true,\n        },\n        {\n            message: 'Please-enter-slug-properly.',\n            validator: async (rule: RuleObject, value: string) => {\n                if (textToSlug(value) !== value) {\n                    throw new Error('Slug is not formatted.');\n                }\n            },\n        },\n        {\n            message: 'Please enter another slug. This slug already exists.',\n            // eslint-disable-next-line complexity\n            validator: async (rule: RuleObject, value: string) => {\n                const savedArticleBySlugList: Array<ArticleForValidationType> = savedArticleList.filter(\n                    (savedArticle: ArticleForValidationType): boolean => {\n                        return savedArticle.slug === value;\n                    }\n                );\n\n                const savedArticleBySlugListLength = savedArticleBySlugList.length;\n\n                if (savedArticleBySlugListLength === 0) {\n                    return;\n                }\n\n                if (savedArticleBySlugListLength >= 2) {\n                    throw new Error('There are should be only one no non articles');\n                }\n\n                const isSavedArticle: boolean = savedArticleBySlugListLength > 0;\n\n                if (mode === CmsArticleModeEnum.create && isSavedArticle) {\n                    throw new Error('Use unique slug.');\n                }\n\n                const [savedArticleForValidation] = savedArticleBySlugList;\n\n                if (\n                    mode === CmsArticleModeEnum.edit &&\n                    savedArticleForValidation.slug === value &&\n                    savedArticleForValidation.id !== id\n                ) {\n                    throw new Error('Article with your slug already exists');\n                }\n            },\n        },\n    ];\n}\n\nexport function makeHtmlValidator(): Array<Rule> {\n    return [\n        {\n            message: 'Invalid HTML.',\n            validator: async (rule: RuleObject, value: string) => {\n                if (typeof document === 'undefined') {\n                    return;\n                }\n\n                const wrapper = document.createElement('div');\n\n                wrapper.innerHTML = value;\n\n                if (wrapper.innerHTML.trim() === value.trim()) {\n                    return;\n                }\n\n                throw new Error('HTML is not valid');\n            },\n        },\n    ];\n}\n\nexport function getArticleLinkToEdit(articleId: string): string {\n    return generatePath<typeof appRoute.articleEdit.path>(appRoute.articleEdit.path, {articleId});\n}\n\nexport function getFileExtension(fileName: string): string {\n    const hasExtension = fileName.includes('.');\n\n    if (!hasExtension) {\n        return '';\n    }\n\n    return (fileName.split('.').pop() || '').toLowerCase();\n}\n\nexport function getIsImage(fileName: string): boolean {\n    const fileExtension = getFileExtension(fileName);\n\n    return ['jpg', 'jpeg', 'jfif', 'gif', 'png', 'webp'].includes(fileExtension);\n}\n\nexport function getIsAudio(fileName: string): boolean {\n    const fileExtension = getFileExtension(fileName);\n\n    return ['mp3', 'wav'].includes(fileExtension);\n}\n\nexport function getIsVideo(fileName: string): boolean {\n    const fileExtension = getFileExtension(fileName);\n\n    return ['mp4'].includes(fileExtension);\n}\n\n/*\nexport async function getFileMarkdownByName(fileName: string): Promise<string> {\n    const pathToFile = getPathToFile(fileName);\n\n    if (getIsImage(fileName)) {\n        const pathToImage = getPathToImage(fileName, {height: 320, width: 320});\n        const {naturalHeight, naturalWidth} = await fetchImage(pathToFile);\n\n        return `![THE ALT](${pathToImage} \"THE TITLE\" height=\"${naturalHeight}\" width=\"${naturalWidth}\")`;\n    }\n\n    if (getIsAudio(fileName)) {\n        const {duration} = await fetchAudio(pathToFile);\n\n        return `<audio data-duration=\"${duration}\" data-download=\"\" src=\"${pathToFile}\"></audio>`;\n    }\n\n    return `<a href=\"${pathToFile}\" target=\"_blank\" download=\"${fileName}\">${fileName}</a>`;\n}\n*/\n\nexport function getAbsentIdList(\n    subDocumentIdList: Array<string>,\n    savedArticleList: Array<ArticleForValidationType>\n): Array<string> {\n    if (savedArticleList.length === 0) {\n        return [];\n    }\n\n    return subDocumentIdList.filter((id: string): boolean => {\n        return !savedArticleList.some((article: ArticleForValidationType): boolean => article.id === id);\n    });\n}\n\nexport function handleDeleteArticle(articleId: string): Promise<unknown> {\n    return deleteArticle(articleId)\n        .then((): unknown => location.reload())\n        .catch(console.error);\n}\n","import {ReactNode} from 'react';\nimport {Layout, Menu} from 'antd';\nimport {Link, useLocation} from 'react-router-dom';\n\nimport 'antd/dist/reset.css';\n\nimport {Box} from '../../../../layout/box/box';\nimport {appRoute} from '../../../../component/app/app-route';\n\nconst {Content} = Layout;\n\ntype CmsPagePropsType = {\n    children: ReactNode;\n};\n\nexport function CmsPage(props: CmsPagePropsType): JSX.Element {\n    const {children} = props;\n    const routerLocation = useLocation();\n\n    return (\n        <Layout>\n            <Box padding={16}>\n                <Menu\n                    defaultSelectedKeys={[routerLocation.pathname]}\n                    items={[\n                        {\n                            key: appRoute.articleList.path,\n                            label: <Link to={appRoute.articleList.path}>List</Link>,\n                        },\n                        {\n                            key: appRoute.articleCreate.path,\n                            label: <Link to={appRoute.articleCreate.path}>Create</Link>,\n                        },\n                        {\n                            key: appRoute.articleTree.path,\n                            label: <Link to={appRoute.articleTree.path}>Tree</Link>,\n                        },\n                    ]}\n                    mode=\"horizontal\"\n                />\n            </Box>\n\n            <Box padding={16}>\n                <Content>{children}</Content>\n            </Box>\n\n            {/* <Footer>Footer is here</Footer> */}\n        </Layout>\n    );\n}\n"],"names":["makeCssArray","value","Array","isArray","length","console","error","Box","props","tagName","TagName","children","margin","padding","width","height","boxSizing","backgroundColor","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","map","style","_jsx","SortDirectionEnum","getArticleTableColumnList","data","setSearchedColumn","setSearchText","dataIndex","defaultSortOrder","ascend","filterDropdown","filterProps","visible","inputRef","useRef","useEffect","setTimeout","_a","current","focus","cursor","Input","onInput","evt","currentTarget","trim","placeholder","ref","filterIcon","SearchOutlined","key","render","title","article","Link","to","getArticleLinkToViewClient","slug","id","sorter","getArticleLinkToEdit","align","isActive","getTickCross","imageFile","alt","name","src","getPathToImage","objectFit","dateIsoToHumanView","keyForTableListList","Title","Typography","CmsArticleList","searchedColumn","useState","searchText","execute","executeArticleList","result","resultArticleList","isInProgress","isInProgressArticleList","useMakeExecutableState","getArticleListPaginationPick","paginationArticleList","setPaginationArticleList","pageConfig","pageIndex","pageSize","sort","query","currentPagination","sortDirection","String","descend","makeSafeRegExp","toString","_jsxs","CmsPage","level","Table","columns","dataSource","list","loading","onChange","pagination","filters","extra","firstSorter","warn","column","order","field","columnKey","defaultPageSize","hideOnSinglePage","pageSizeOptions","showSizeChanger","total","totalItemCount","rowKey","CmsArticleModeEnum","keyForValidationList","noDateUTC","imageAccept","imageFileSizeLimit","fileSizeLimit","async","uploadFile","file","fileSizeLimitBytes","formData","FormData","size","Error","append","fileInfo","fetchX","apiUrl","adminFileUpload","makeArticleFileSchema","body","credentials","method","FetchMethodEnum","post","pathToFile","getPathToFile","type","ArticleFileTypeEnum","image","naturalHeight","naturalWidth","pathToImage","Image","Promise","resolve","reject","addEventListener","fetchImage","audio","duration","pathToAudio","Audio","preload","fetchAudio","video","videoWidth","videoHeight","pathToVideo","document","createElement","fetchVideo","unknown","NeverError","makeSlugValidator","mode","savedArticleList","message","required","validator","rule","textToSlug","savedArticleBySlugList","filter","savedArticle","savedArticleBySlugListLength","isSavedArticle","create","savedArticleForValidation","edit","makeHtmlValidator","wrapper","innerHTML","articleId","generatePath","appRoute","articleEdit","path","getIsImage","fileName","fileExtension","includes","split","pop","toLowerCase","getFileExtension","getAbsentIdList","subDocumentIdList","some","handleDeleteArticle","deleteArticle","then","location","reload","catch","Content","Layout","routerLocation","useLocation","Menu","defaultSelectedKeys","pathname","items","articleList","label","articleCreate","articleTree"],"sourceRoot":""}