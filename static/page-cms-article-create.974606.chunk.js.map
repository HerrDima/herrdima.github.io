{"version":3,"file":"page-cms-article-create.974606.chunk.js","mappings":"+QAcA,MAAM,MAACA,GAASC,EAAAA,QAEV,SAAUC,IACZ,MAAMC,GAAWC,EAAAA,EAAAA,gBAEVC,QAASC,EAAeC,aAAcC,IAA6BC,EAAAA,EAAAA,IAGxEC,EAAAA,IAgBF,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAAAC,SAAA,EACJC,EAAAA,EAAAA,KAACd,EAAK,CAACe,MAAO,EAACF,SAAA,wBACfC,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CACPC,QAAS,KACFC,EAAAA,EAAAA,KACHC,IAAIC,EAAAA,EAAAA,OAERC,KAAMC,EAAAA,GAAmBC,OACzBC,SAvBZ,SAAwBP,GACpBX,EAAcW,GACTQ,MAAMC,IAGHvB,GAASwB,EAAAA,EAAAA,IAAqBV,EAAQE,KAEtCS,EAAAA,GAAQC,QAAQ,4BAA4B,IAE/CC,OAAOC,IACJH,EAAAA,GAAQI,MAAM,UAAUD,EAAaH,UAAU,GAE3D,KAaQd,EAAAA,EAAAA,KAACmB,EAAAA,EAAO,CAACC,OAAQ1B,EAA2B2B,SAAS,YAV5C,SAarB,C","sources":["webpack://min-svenska/./www/page/cms/cms-article/cms-article-create/cms-article-create.tsx"],"sourcesContent":["import {Typography, message} from 'antd';\nimport {useNavigate} from 'react-router-dom';\n\nimport {CmsArticle} from '../cms-article';\nimport {makeDefaultArticle} from '../../../../../server/article/article-helper';\nimport {CmsArticleModeEnum} from '../cms-article-const';\nimport {ArticleType} from '../../../../../server/article/article-type';\nimport {postArticleCreate} from '../../../../service/article/article-api';\nimport {useMakeExecutableState} from '../../../../util/function';\nimport {getRandomString} from '../../../../util/string';\nimport {Spinner} from '../../../../layout/spinner/spinner';\nimport {CmsPage} from '../../layout/cms-page/cms-page';\nimport {getArticleLinkToEdit} from '../cms-article-helper';\n\nconst {Title} = Typography;\n\nexport function CmsArticleCreate(): JSX.Element {\n    const navigate = useNavigate();\n\n    const {execute: createArticle, isInProgress: isInProgressCreateArticle} = useMakeExecutableState<\n        Parameters<typeof postArticleCreate>,\n        ArticleType\n    >(postArticleCreate);\n\n    function handleOnFinish(article: ArticleType) {\n        createArticle(article)\n            .then((savedArticle: ArticleType) => {\n                console.log(savedArticle);\n\n                navigate(getArticleLinkToEdit(article.id));\n\n                message.success('Article has been created!');\n            })\n            .catch((requestError: Error) => {\n                message.error(`ERROR: ${requestError.message}`);\n            });\n    }\n\n    return (\n        <CmsPage key=\"create\">\n            <Title level={2}>Create new article</Title>\n            <CmsArticle\n                article={{\n                    ...makeDefaultArticle(),\n                    id: getRandomString(),\n                }}\n                mode={CmsArticleModeEnum.create}\n                onFinish={handleOnFinish}\n            />\n            <Spinner isShow={isInProgressCreateArticle} position=\"fixed\" />\n        </CmsPage>\n    );\n}\n"],"names":["Title","Typography","CmsArticleCreate","navigate","useNavigate","execute","createArticle","isInProgress","isInProgressCreateArticle","useMakeExecutableState","postArticleCreate","_jsxs","CmsPage","children","_jsx","level","CmsArticle","article","makeDefaultArticle","id","getRandomString","mode","CmsArticleModeEnum","create","onFinish","then","savedArticle","getArticleLinkToEdit","message","success","catch","requestError","error","Spinner","isShow","position"],"sourceRoot":""}