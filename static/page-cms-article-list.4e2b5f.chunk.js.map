{"version":3,"file":"page-cms-article-list.4e2b5f.chunk.js","mappings":"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","sources":["webpack://typescript-project/./www/layout/box/box-helper.ts","webpack://typescript-project/./www/layout/box/box.tsx","webpack://typescript-project/./www/page/cms/cms-article-list/cms-article-list-type.ts","webpack://typescript-project/./www/page/cms/cms-article-list/cms-article-list-const.tsx","webpack://typescript-project/./www/page/cms/cms-article-list/cms-article-list.tsx","webpack://typescript-project/./www/page/cms/cms-article/cms-article-const.ts","webpack://typescript-project/./www/page/cms/cms-article/cms-article-helper.tsx","webpack://typescript-project/./www/page/cms/layout/cms-page/cms-page.tsx"],"sourcesContent":["// eslint-disable-next-line complexity\r\nexport function makeCssArray(value?: Array<number> | number): [number, number, number, number] {\r\n    if (typeof value === 'number') {\r\n        return [value, value, value, value];\r\n    }\r\n\r\n    if (!Array.isArray(value)) {\r\n        return [0, 0, 0, 0];\r\n    }\r\n\r\n    const arrayLength = value.length;\r\n\r\n    switch (arrayLength) {\r\n        case 0: {\r\n            return [0, 0, 0, 0];\r\n        }\r\n        case 1: {\r\n            return [value[0], value[0], value[0], value[0]];\r\n        }\r\n        case 2: {\r\n            return [value[0], value[1], value[0], value[1]];\r\n        }\r\n        case 3: {\r\n            return [value[0], value[1], value[2], value[1]];\r\n        }\r\n        case 4: {\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n        default: {\r\n            console.error('makeCssArray: too big array');\r\n            return [value[0], value[1], value[2], value[3]];\r\n        }\r\n    }\r\n}\r\n","import {ReactNode, ElementType, CSSProperties} from 'react';\r\n\r\nimport {makeCssArray} from './box-helper';\r\n\r\ntype BoxPropsType = {\r\n    backgroundColor?: string;\r\n    boxSizing?: 'border-box' | 'content-box' | 'initial';\r\n    children?: ReactNode;\r\n    display?: 'block' | 'flex' | 'inline';\r\n    height?: number | string;\r\n    margin?: Array<number> | number;\r\n    padding?: Array<number> | number;\r\n    tagName?: ElementType;\r\n    width?: number | string;\r\n};\r\n\r\nexport function Box(props: BoxPropsType): JSX.Element {\r\n    const {\r\n        tagName: TagName = 'div',\r\n        children,\r\n        margin,\r\n        padding,\r\n        width,\r\n        height,\r\n        boxSizing,\r\n        backgroundColor,\r\n        display,\r\n    } = props;\r\n\r\n    const [marginTop, marginRight, marginBottom, marginLeft, paddingTop, paddingRight, paddingBottom, paddingLeft] = [\r\n        ...makeCssArray(margin),\r\n        ...makeCssArray(padding),\r\n    ].map((value: number): string => `${value}px`);\r\n\r\n    const style: CSSProperties = {\r\n        backgroundColor,\r\n        boxSizing,\r\n        display,\r\n        height,\r\n        marginBottom,\r\n        marginLeft,\r\n        marginRight,\r\n        marginTop,\r\n        paddingBottom,\r\n        paddingLeft,\r\n        paddingRight,\r\n        paddingTop,\r\n        width,\r\n    };\r\n\r\n    return <TagName style={style}>{children}</TagName>;\r\n}\r\n","import {ArticleType} from '../../../../server/article/article-type';\r\n\r\nexport const enum SortDirectionEnum {\r\n    ascend = 'ascend',\r\n    descend = 'descend',\r\n}\r\n\r\nexport type ArticleForTableListKeysType =\r\n    | 'articleType'\r\n    | 'createdDate'\r\n    | 'id'\r\n    | 'isActive'\r\n    | 'publishDate'\r\n    | 'slug'\r\n    | 'title'\r\n    | 'titleImage'\r\n    | 'updatedDate';\r\nexport type ArticleForTableListType = Pick<ArticleType, ArticleForTableListKeysType>;\r\nexport type KeyForTableListListType = [\r\n    'articleType',\r\n    'createdDate',\r\n    'id',\r\n    'isActive',\r\n    'publishDate',\r\n    'slug',\r\n    'title',\r\n    'titleImage',\r\n    'updatedDate'\r\n];\r\n","/* global HTMLInputElement */\r\nimport {SyntheticEvent} from 'react';\r\nimport {Input} from 'antd';\r\nimport {ColumnType} from 'antd/es/table/interface';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {getArticleLinkToEdit} from '../cms-article/cms-article-helper';\r\nimport {getTickCross} from '../../../util/string';\r\nimport {dateIsoToHumanView} from '../../../util/time';\r\nimport {getArticleLinkToViewClient} from '../../../client-component/article/article-helper';\r\nimport {ArticleFileType} from '../../../../server/article/article-type';\r\nimport {getPathToImage} from '../../../util/path';\r\n\r\nimport {\r\n    ArticleForTableListKeysType,\r\n    ArticleForTableListType,\r\n    KeyForTableListListType,\r\n    SortDirectionEnum,\r\n} from './cms-article-list-type';\r\n\r\ntype GetArticleTableColumnListArgumentType = {\r\n    setSearchText: (searchText: string) => void;\r\n    setSearchedColumn: (dataIndex: ArticleForTableListKeysType) => void;\r\n};\r\n\r\nexport function getArticleTableColumnList(\r\n    data: GetArticleTableColumnListArgumentType\r\n): Array<ColumnType<ArticleForTableListType>> {\r\n    const {setSearchedColumn, setSearchText} = data;\r\n\r\n    const articleTableColumnList: Array<ColumnType<ArticleForTableListType>> = [\r\n        /*\r\n        {\r\n            dataIndex: 'id',\r\n            defaultSortOrder: null,\r\n            key: 'id',\r\n            sorter: () => 0,\r\n            title: 'Id',\r\n        },\r\n    */\r\n        {\r\n            dataIndex: 'title',\r\n            defaultSortOrder: SortDirectionEnum.ascend,\r\n            // eslint-disable-next-line react/no-multi-comp\r\n            filterDropdown: () => {\r\n                return (\r\n                    <Input\r\n                        key=\"title\"\r\n                        onInput={(evt: SyntheticEvent<HTMLInputElement>) => {\r\n                            setSearchedColumn('title');\r\n                            setSearchText(evt.currentTarget.value.trim());\r\n                        }}\r\n                        placeholder=\"Search...\"\r\n                    />\r\n                );\r\n            },\r\n            filterIcon: <SearchOutlined />,\r\n            key: 'title',\r\n            render(title: string, article: ArticleForTableListType) {\r\n                return (\r\n                    <Link key={article.id} to={getArticleLinkToViewClient(article.slug)}>\r\n                        {title}\r\n                    </Link>\r\n                );\r\n            },\r\n            sorter: () => 0,\r\n            title: 'Title',\r\n        },\r\n        {\r\n            dataIndex: 'slug',\r\n            defaultSortOrder: null,\r\n            // eslint-disable-next-line react/no-multi-comp\r\n            filterDropdown: () => {\r\n                return (\r\n                    <Input\r\n                        key=\"slug\"\r\n                        onInput={(evt: SyntheticEvent<HTMLInputElement>) => {\r\n                            setSearchedColumn('slug');\r\n                            setSearchText(evt.currentTarget.value);\r\n                        }}\r\n                        placeholder=\"Search...\"\r\n                    />\r\n                );\r\n            },\r\n            filterIcon: <SearchOutlined />,\r\n            key: 'slug',\r\n            render(slug: string, article: ArticleForTableListType) {\r\n                return (\r\n                    <Link key={article.id} to={getArticleLinkToEdit(article.id)}>\r\n                        {slug}\r\n                    </Link>\r\n                );\r\n            },\r\n            sorter: () => 0,\r\n            title: 'Slug/edit',\r\n        },\r\n        {\r\n            dataIndex: 'articleType',\r\n            defaultSortOrder: null,\r\n            key: 'articleType',\r\n            sorter: () => 0,\r\n            title: 'Type',\r\n        },\r\n        {\r\n            align: 'center',\r\n            dataIndex: 'isActive',\r\n            defaultSortOrder: null,\r\n            key: 'isActive',\r\n            render(\r\n                isActive: boolean\r\n                // article: ArticleForTableListType\r\n            ) {\r\n                return getTickCross(isActive);\r\n            },\r\n            sorter: () => 0,\r\n            title: 'Is active',\r\n        },\r\n        {\r\n            align: 'center',\r\n            dataIndex: 'titleImage',\r\n            defaultSortOrder: null,\r\n            key: 'titleImage',\r\n            render(imageFile: ArticleFileType) {\r\n                return (\r\n                    <img\r\n                        alt={imageFile.name}\r\n                        height=\"64px\"\r\n                        src={getPathToImage(imageFile.name, {height: 64, width: 64})}\r\n                        style={{objectFit: 'contain'}}\r\n                        width=\"64px\"\r\n                    />\r\n                );\r\n            },\r\n            sorter: () => 0,\r\n            title: 'Image',\r\n        },\r\n        {\r\n            align: 'right',\r\n            dataIndex: 'createdDate',\r\n            defaultSortOrder: null,\r\n            key: 'createdDate',\r\n            render: dateIsoToHumanView,\r\n            sorter: () => 0,\r\n            title: 'Created UTC-0',\r\n            width: 120,\r\n        },\r\n        {\r\n            align: 'right',\r\n            dataIndex: 'updatedDate',\r\n            defaultSortOrder: null,\r\n            key: 'updatedDate',\r\n            render: dateIsoToHumanView,\r\n            sorter: () => 0,\r\n            title: 'Updated UTC-0',\r\n            width: 120,\r\n        },\r\n        {\r\n            align: 'right',\r\n            dataIndex: 'publishDate',\r\n            defaultSortOrder: null,\r\n            key: 'publishDate',\r\n            render: dateIsoToHumanView,\r\n            sorter: () => 0,\r\n            title: 'Publish UTC-0',\r\n            width: 120,\r\n        },\r\n    ];\r\n\r\n    return articleTableColumnList;\r\n}\r\n\r\nexport const keyForTableListList: KeyForTableListListType = [\r\n    'articleType',\r\n    'createdDate',\r\n    'id',\r\n    'isActive',\r\n    'publishDate',\r\n    'slug',\r\n    'title',\r\n    'titleImage',\r\n    'updatedDate',\r\n];\r\n","import {useEffect, useState} from 'react';\r\nimport {Table, Typography} from 'antd';\r\nimport {TablePaginationConfig, FilterValue, SorterResult, TableCurrentDataSource} from 'antd/es/table/interface';\r\n\r\nimport {useMakeExecutableState} from '../../../util/function';\r\nimport {PaginationQueryType, PaginationResultType} from '../../../../server/data-base/data-base-type';\r\nimport {getArticleListPaginationPick} from '../../../service/article/article-api';\r\nimport {CmsPage} from '../layout/cms-page/cms-page';\r\n\r\nimport {getArticleTableColumnList, keyForTableListList} from './cms-article-list-const';\r\nimport {ArticleForTableListKeysType, ArticleForTableListType, SortDirectionEnum} from './cms-article-list-type';\r\n\r\nconst {Title} = Typography;\r\n\r\nexport function CmsArticleList(): JSX.Element {\r\n    const defaultPageSize = 10;\r\n    const [searchedColumn, setSearchedColumn] = useState<ArticleForTableListKeysType>('title');\r\n    const [searchText, setSearchText] = useState<string>('');\r\n\r\n    // article for table\r\n    const {\r\n        execute: executeArticleList,\r\n        result: resultArticleList,\r\n        isInProgress: isInProgressArticleList,\r\n    } = useMakeExecutableState<\r\n        Parameters<typeof getArticleListPaginationPick<keyof ArticleForTableListType>>,\r\n        PaginationResultType<ArticleForTableListType>\r\n    >(getArticleListPaginationPick);\r\n\r\n    const [paginationArticleList, setPaginationArticleList] = useState<PaginationQueryType<ArticleForTableListType>>({\r\n        pageConfig: {\r\n            pageIndex: 0,\r\n            pageSize: defaultPageSize,\r\n            sort: {title: 1},\r\n        },\r\n        query: {},\r\n    });\r\n\r\n    useEffect(() => {\r\n        executeArticleList(paginationArticleList.query, paginationArticleList.pageConfig, keyForTableListList);\r\n    }, [executeArticleList, paginationArticleList]);\r\n\r\n    useEffect(() => {\r\n        setPaginationArticleList(\r\n            (\r\n                currentPagination: PaginationQueryType<ArticleForTableListType>\r\n            ): PaginationQueryType<ArticleForTableListType> => {\r\n                const rawDirection = String({...currentPagination.pageConfig.sort}[String(searchedColumn)]);\r\n                const sortDirection = rawDirection === SortDirectionEnum.descend ? -1 : 1;\r\n                const {pageSize} = currentPagination.pageConfig;\r\n\r\n                return {\r\n                    pageConfig: {\r\n                        pageIndex: 0,\r\n                        pageSize,\r\n                        sort: {[String(searchedColumn)]: sortDirection},\r\n                    },\r\n                    query: {[searchedColumn]: new RegExp(searchText, 'i').toString()},\r\n                };\r\n            }\r\n        );\r\n    }, [searchedColumn, searchText]);\r\n\r\n    // eslint-disable-next-line complexity, max-statements\r\n    function handleTableChange(\r\n        pagination: TablePaginationConfig,\r\n        filters: Record<string, FilterValue | null>,\r\n        sorter: Array<SorterResult<ArticleForTableListType>> | SorterResult<ArticleForTableListType>,\r\n        extra: TableCurrentDataSource<ArticleForTableListType>\r\n    ) {\r\n        const firstSorter: SorterResult<ArticleForTableListType> | void = Array.isArray(sorter) ? sorter[0] : sorter;\r\n\r\n        if (!firstSorter) {\r\n            console.warn('handleTableChange - NO firstSorter');\r\n            return;\r\n        }\r\n\r\n        const {column, order, field, columnKey} = firstSorter;\r\n        const sortDirection = order === SortDirectionEnum.descend ? -1 : 1;\r\n\r\n        const pageIndex = (pagination.current || 1) - 1;\r\n        const pageSize = pagination.pageSize || defaultPageSize;\r\n\r\n        setPaginationArticleList((): PaginationQueryType<ArticleForTableListType> => {\r\n            return {\r\n                pageConfig: {\r\n                    pageIndex,\r\n                    pageSize,\r\n                    sort: {[String(field)]: sortDirection},\r\n                },\r\n                query: {[searchedColumn]: new RegExp(searchText, 'i').toString()},\r\n            };\r\n        });\r\n\r\n        console.log('handleTableChange');\r\n        console.log('pagination:', pagination);\r\n        console.log('filters:', filters);\r\n        console.log('column:', column);\r\n        console.log('sorter:', sorter);\r\n        console.log('order:', order);\r\n        console.log('columnKey:', columnKey);\r\n        console.log('extra:', extra);\r\n        console.log('///');\r\n        console.log(searchedColumn);\r\n        console.log(searchText);\r\n        console.log('///');\r\n    }\r\n\r\n    return (\r\n        <CmsPage>\r\n            <Title level={2}>Article list</Title>\r\n\r\n            <Table<ArticleForTableListType>\r\n                columns={getArticleTableColumnList({setSearchText, setSearchedColumn})}\r\n                dataSource={resultArticleList?.list || []}\r\n                loading={isInProgressArticleList}\r\n                onChange={handleTableChange}\r\n                pagination={{\r\n                    current: paginationArticleList.pageConfig.pageIndex + 1,\r\n                    defaultPageSize,\r\n                    hideOnSinglePage: false,\r\n                    pageSize: paginationArticleList.pageConfig.pageSize,\r\n                    pageSizeOptions: [defaultPageSize, 50, 100, 500, 1000, 2000, 5000],\r\n                    showSizeChanger: true,\r\n                    total: resultArticleList?.totalItemCount || 0,\r\n                }}\r\n                rowKey=\"id\"\r\n            />\r\n        </CmsPage>\r\n    );\r\n}\r\n","import {KeyForValidationListType} from './cms-article-type';\r\n\r\nexport const enum CmsArticleModeEnum {\r\n    create = 'create',\r\n    edit = 'edit',\r\n}\r\n\r\nexport const keyForValidationList: KeyForValidationListType = ['id', 'slug', 'subDocumentIdList', 'title'];\r\nexport const noDateUTC = '0000-00-00T00:00:00.000Z';\r\n\r\nexport const imageAccept = 'image/png, image/jpeg, image/gif, image/webp';\r\nexport const fileAccept = `${imageAccept}, audio/mp3, audio/wav`;\r\nexport const imageFileSizeLimit = 16e6;\r\nexport const fileSizeLimit = 75e6;\r\n","/* global document, Image, HTMLImageElement, Audio, HTMLAudioElement, HTMLVideoElement, File, FormData, location */\r\nimport {Rule, RuleObject} from 'rc-field-form/lib/interface';\r\n\r\nimport {generatePath} from '../../../util/url';\r\nimport {textToSlug} from '../../../util/human';\r\nimport {appRoute} from '../../../component/app/app-route';\r\nimport {PromiseResolveType} from '../../../util/promise';\r\nimport {apiUrl} from '../../../../server/const';\r\nimport {FetchMethodEnum, fetchX} from '../../../util/fetch';\r\nimport {deleteArticle} from '../../../service/article/article-api';\r\nimport {ArticleFileType, ArticleFileTypeEnum} from '../../../../server/article/article-type';\r\nimport {makeArticleFileSchema} from '../../../../server/article/article-validation';\r\nimport {NeverError} from '../../../util/error';\r\n\r\nimport {getPathToFile} from '../../../util/path';\r\n\r\nimport {ArticleForValidationType, MakeSlugValidatorArgumentType} from './cms-article-type';\r\nimport {CmsArticleModeEnum} from './cms-article-const';\r\n\r\nexport function fetchImage(pathToImage: string): Promise<HTMLImageElement> {\r\n    const image = new Image();\r\n\r\n    return new Promise<HTMLImageElement>(\r\n        (resolve: PromiseResolveType<HTMLImageElement>, reject: PromiseResolveType<unknown>) => {\r\n            image.addEventListener('load', () => resolve(image), false);\r\n\r\n            image.addEventListener('error', reject, false);\r\n\r\n            image.src = pathToImage;\r\n        }\r\n    );\r\n}\r\n\r\nexport function fetchAudio(pathToAudio: string): Promise<HTMLAudioElement> {\r\n    const audio = new Audio();\r\n\r\n    return new Promise<HTMLAudioElement>(\r\n        (resolve: PromiseResolveType<HTMLAudioElement>, reject: PromiseResolveType<unknown>) => {\r\n            audio.addEventListener('loadedmetadata', () => resolve(audio), false);\r\n\r\n            audio.addEventListener('error', reject, false);\r\n\r\n            audio.preload = 'metadata';\r\n            audio.src = pathToAudio;\r\n        }\r\n    );\r\n}\r\n\r\nexport function fetchVideo(pathToVideo: string): Promise<HTMLVideoElement> {\r\n    const video: HTMLVideoElement = document.createElement('video');\r\n\r\n    return new Promise<HTMLVideoElement>(\r\n        (resolve: PromiseResolveType<HTMLVideoElement>, reject: PromiseResolveType<unknown>) => {\r\n            video.addEventListener('loadedmetadata', () => resolve(video), false);\r\n\r\n            video.addEventListener('error', reject, false);\r\n\r\n            video.preload = 'metadata';\r\n            video.src = pathToVideo;\r\n        }\r\n    );\r\n}\r\n\r\n// eslint-disable-next-line complexity\r\nexport async function uploadFile(file: File, fileSizeLimitBytes: number): Promise<ArticleFileType> {\r\n    const formData = new FormData();\r\n\r\n    if (file.size >= fileSizeLimitBytes) {\r\n        throw new Error(`Too big file, limit ${fileSizeLimitBytes / 1e6}MB`);\r\n    }\r\n\r\n    formData.append('file', file);\r\n\r\n    const fileInfo: ArticleFileType = await fetchX<ArticleFileType>(apiUrl.adminFileUpload, makeArticleFileSchema(), {\r\n        body: formData,\r\n        credentials: 'include',\r\n        method: FetchMethodEnum.post,\r\n    });\r\n\r\n    const pathToFile = getPathToFile(fileInfo.name);\r\n\r\n    switch (fileInfo.type) {\r\n        case ArticleFileTypeEnum.image: {\r\n            const {naturalHeight, naturalWidth} = await fetchImage(pathToFile);\r\n\r\n            return {\r\n                ...fileInfo,\r\n                height: naturalHeight,\r\n                width: naturalWidth,\r\n            };\r\n        }\r\n        case ArticleFileTypeEnum.audio: {\r\n            const {duration} = await fetchAudio(pathToFile);\r\n\r\n            return {\r\n                ...fileInfo,\r\n                duration,\r\n            };\r\n        }\r\n\r\n        case ArticleFileTypeEnum.video: {\r\n            const {duration, videoWidth, videoHeight} = await fetchVideo(pathToFile);\r\n\r\n            return {\r\n                ...fileInfo,\r\n                duration,\r\n                height: videoHeight,\r\n                width: videoWidth,\r\n            };\r\n        }\r\n\r\n        case ArticleFileTypeEnum.unknown: {\r\n            return fileInfo;\r\n        }\r\n\r\n        default: {\r\n            throw new NeverError(fileInfo.type);\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unreachable\r\n    return fileInfo;\r\n}\r\n\r\nexport function makeSlugValidator(data: MakeSlugValidatorArgumentType): Array<Rule> {\r\n    const {id, mode, savedArticleList} = data;\r\n\r\n    return [\r\n        {\r\n            message: 'Required!',\r\n            required: true,\r\n        },\r\n        {\r\n            message: 'Please-enter-slug-properly.',\r\n            validator: async (rule: RuleObject, value: string) => {\r\n                if (textToSlug(value) !== value) {\r\n                    throw new Error('Slug is not formatted.');\r\n                }\r\n            },\r\n        },\r\n        {\r\n            message: 'Please enter another slug. This slug already exists.',\r\n            // eslint-disable-next-line complexity\r\n            validator: async (rule: RuleObject, value: string) => {\r\n                const savedArticleBySlugList: Array<ArticleForValidationType> = savedArticleList.filter(\r\n                    (savedArticle: ArticleForValidationType): boolean => {\r\n                        return savedArticle.slug === value;\r\n                    }\r\n                );\r\n\r\n                const savedArticleBySlugListLength = savedArticleBySlugList.length;\r\n\r\n                if (savedArticleBySlugListLength === 0) {\r\n                    return;\r\n                }\r\n\r\n                if (savedArticleBySlugListLength >= 2) {\r\n                    throw new Error('There are should be only one no non articles');\r\n                }\r\n\r\n                const isSavedArticle: boolean = savedArticleBySlugListLength > 0;\r\n\r\n                if (mode === CmsArticleModeEnum.create && isSavedArticle) {\r\n                    throw new Error('Use unique slug.');\r\n                }\r\n\r\n                const [savedArticleForValidation] = savedArticleBySlugList;\r\n\r\n                if (\r\n                    mode === CmsArticleModeEnum.edit &&\r\n                    savedArticleForValidation.slug === value &&\r\n                    savedArticleForValidation.id !== id\r\n                ) {\r\n                    throw new Error('Article with your slug already exists');\r\n                }\r\n            },\r\n        },\r\n    ];\r\n}\r\n\r\nexport function makeHtmlValidator(): Array<Rule> {\r\n    return [\r\n        {\r\n            message: 'Invalid HTML.',\r\n            validator: async (rule: RuleObject, value: string) => {\r\n                if (typeof document === 'undefined') {\r\n                    return;\r\n                }\r\n\r\n                const wrapper = document.createElement('div');\r\n\r\n                wrapper.innerHTML = value;\r\n\r\n                if (wrapper.innerHTML.trim() === value.trim()) {\r\n                    return;\r\n                }\r\n\r\n                throw new Error('HTML is not valid');\r\n            },\r\n        },\r\n    ];\r\n}\r\n\r\nexport function getArticleLinkToEdit(articleId: string): string {\r\n    return generatePath<typeof appRoute.articleEdit.path>(appRoute.articleEdit.path, {articleId});\r\n}\r\n\r\nexport function getFileExtension(fileName: string): string {\r\n    const hasExtension = fileName.includes('.');\r\n\r\n    if (!hasExtension) {\r\n        return '';\r\n    }\r\n\r\n    return (fileName.split('.').pop() || '').toLowerCase();\r\n}\r\n\r\nexport function getIsImage(fileName: string): boolean {\r\n    const fileExtension = getFileExtension(fileName);\r\n\r\n    return ['jpg', 'jpeg', 'jfif', 'gif', 'png', 'webp'].includes(fileExtension);\r\n}\r\n\r\nexport function getIsAudio(fileName: string): boolean {\r\n    const fileExtension = getFileExtension(fileName);\r\n\r\n    return ['mp3', 'wav'].includes(fileExtension);\r\n}\r\n\r\nexport function getIsVideo(fileName: string): boolean {\r\n    const fileExtension = getFileExtension(fileName);\r\n\r\n    return ['mp4'].includes(fileExtension);\r\n}\r\n\r\n/*\r\nexport async function getFileMarkdownByName(fileName: string): Promise<string> {\r\n    const pathToFile = getPathToFile(fileName);\r\n\r\n    if (getIsImage(fileName)) {\r\n        const pathToImage = getPathToImage(fileName, {height: 320, width: 320});\r\n        const {naturalHeight, naturalWidth} = await fetchImage(pathToFile);\r\n\r\n        return `![THE ALT](${pathToImage} \"THE TITLE\" height=\"${naturalHeight}\" width=\"${naturalWidth}\")`;\r\n    }\r\n\r\n    if (getIsAudio(fileName)) {\r\n        const {duration} = await fetchAudio(pathToFile);\r\n\r\n        return `<audio data-duration=\"${duration}\" data-download=\"\" src=\"${pathToFile}\"></audio>`;\r\n    }\r\n\r\n    return `<a href=\"${pathToFile}\" target=\"_blank\" download=\"${fileName}\">${fileName}</a>`;\r\n}\r\n*/\r\n\r\nexport function getAbsentIdList(\r\n    subDocumentIdList: Array<string>,\r\n    savedArticleList: Array<ArticleForValidationType>\r\n): Array<string> {\r\n    if (savedArticleList.length === 0) {\r\n        return [];\r\n    }\r\n\r\n    return subDocumentIdList.filter((id: string): boolean => {\r\n        return !savedArticleList.some((article: ArticleForValidationType): boolean => article.id === id);\r\n    });\r\n}\r\n\r\nexport function handleDeleteArticle(articleId: string): Promise<unknown> {\r\n    return deleteArticle(articleId)\r\n        .then((): unknown => location.reload())\r\n        .catch(console.error);\r\n}\r\n","import {ReactNode} from 'react';\r\nimport {Layout, Menu} from 'antd';\r\nimport {Link, useLocation} from 'react-router-dom';\r\n\r\nimport 'antd/dist/reset.css';\r\n\r\nimport {Box} from '../../../../layout/box/box';\r\nimport {appRoute} from '../../../../component/app/app-route';\r\n\r\nconst {Content} = Layout;\r\n\r\ntype CmsPagePropsType = {\r\n    children: ReactNode;\r\n};\r\n\r\nexport function CmsPage(props: CmsPagePropsType): JSX.Element {\r\n    const {children} = props;\r\n    const routerLocation = useLocation();\r\n\r\n    return (\r\n        <Layout>\r\n            <Box padding={16}>\r\n                <Menu\r\n                    defaultSelectedKeys={[routerLocation.pathname]}\r\n                    items={[\r\n                        {\r\n                            key: appRoute.articleList.path,\r\n                            label: <Link to={appRoute.articleList.path}>List</Link>,\r\n                        },\r\n                        {\r\n                            key: appRoute.articleCreate.path,\r\n                            label: <Link to={appRoute.articleCreate.path}>Create</Link>,\r\n                        },\r\n                        {\r\n                            key: appRoute.articleTree.path,\r\n                            label: <Link to={appRoute.articleTree.path}>Tree</Link>,\r\n                        },\r\n                    ]}\r\n                    mode=\"horizontal\"\r\n                />\r\n            </Box>\r\n\r\n            <Box padding={16}>\r\n                <Content>{children}</Content>\r\n            </Box>\r\n\r\n            {/* <Footer>Footer is here</Footer> */}\r\n        </Layout>\r\n    );\r\n}\r\n"],"names":["makeCssArray","value","Array","isArray","length","console","error","Box","props","tagName","TagName","children","margin","padding","width","height","boxSizing","backgroundColor","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","map","style","SortDirectionEnum","getArticleTableColumnList","data","setSearchedColumn","setSearchText","dataIndex","defaultSortOrder","ascend","filterDropdown","onInput","evt","currentTarget","trim","placeholder","filterIcon","SearchOutlined","key","render","title","article","Link","to","slug","id","sorter","align","isActive","imageFile","alt","name","src","objectFit","keyForTableListList","Title","CmsArticleList","searchedColumn","useState","searchText","execute","executeArticleList","result","resultArticleList","isInProgress","isInProgressArticleList","paginationArticleList","setPaginationArticleList","pageConfig","pageIndex","pageSize","sort","query","useEffect","currentPagination","sortDirection","String","descend","RegExp","toString","level","columns","dataSource","list","loading","onChange","pagination","filters","extra","firstSorter","warn","column","order","field","columnKey","current","defaultPageSize","hideOnSinglePage","pageSizeOptions","showSizeChanger","total","totalItemCount","rowKey","CmsArticleModeEnum","keyForValidationList","noDateUTC","imageAccept","imageFileSizeLimit","fileSizeLimit","async","uploadFile","file","fileSizeLimitBytes","formData","FormData","size","Error","append","fileInfo","body","credentials","method","pathToFile","type","naturalHeight","naturalWidth","pathToImage","image","Image","Promise","resolve","reject","addEventListener","fetchImage","duration","pathToAudio","audio","Audio","preload","fetchAudio","videoWidth","videoHeight","pathToVideo","video","document","createElement","fetchVideo","makeSlugValidator","mode","savedArticleList","message","required","validator","rule","savedArticleBySlugList","filter","savedArticle","savedArticleBySlugListLength","isSavedArticle","savedArticleForValidation","makeHtmlValidator","wrapper","innerHTML","getArticleLinkToEdit","articleId","getIsImage","fileName","fileExtension","includes","split","pop","toLowerCase","getFileExtension","getAbsentIdList","subDocumentIdList","some","handleDeleteArticle","then","location","reload","catch","Content","CmsPage","routerLocation","defaultSelectedKeys","pathname","items","label"],"sourceRoot":""}