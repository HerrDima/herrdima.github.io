{"version":3,"file":"page-cms-article-edit.a4bb6a.chunk.js","mappings":"iQAcA,MAAM,MAACA,GAASC,EAAAA,QAEV,SAAUC,IACZ,MAAM,UAACC,IAAaC,EAAAA,EAAAA,cAGhBC,QAASC,EACTC,aAAcC,EACdC,OAAQC,IACRC,EAAAA,EAAAA,IACAC,EAAAA,KAGJC,EAAAA,EAAAA,YAAU,KACNP,EACI,CAACQ,GAAIX,GAAa,IAClB,CACIY,UAAW,EACXC,SAAU,EACVC,KAAM,CAACC,MAAO,IAErB,GACF,CAACZ,EAAaH,IAEjB,MAAOE,QAASc,EAAeZ,aAAca,IAA6BT,EAAAA,EAAAA,IAGxEU,EAAAA,IAaIC,GAAoCZ,aAAiB,EAAjBA,EAAmBa,KAAK,KAAM,KAExE,OAAsB,OAAlBD,GAEIE,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAAAC,SAAA,EACJF,EAAAA,EAAAA,MAACG,EAAAA,EAAQ,CAACC,SAAUpB,EAAuBkB,SAAA,EACvCF,EAAAA,EAAAA,MAACxB,EAAK,CAAC6B,MAAO,EAACH,SAAA,qBAAoBvB,MACnC2B,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,OAAQxB,EAAyByB,SAAS,cAEvDH,EAAAA,EAAAA,KAACH,EAAAA,EAAQ,CAACC,UAAWpB,EAAuBkB,UACxCF,EAAAA,EAAAA,MAACxB,EAAK,CAAC6B,MAAO,EAACH,SAAA,iCAAgCvB,SAN1C,eAajBqB,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAAAC,SAAA,EACJF,EAAAA,EAAAA,MAACxB,EAAK,CAAC6B,MAAO,EAACH,SAAA,qBACOJ,EAAcJ,MAAK,MAAKf,MAE9C2B,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACC,QAASb,EAAec,KAAMC,EAAAA,GAAmBC,KAAMC,SAhC3E,SAAwBJ,GACpBhB,EAAcgB,GACTK,MAAMC,IAEHC,EAAAA,GAAQC,QAAQ,4BAA4B,IAE/CC,OAAOC,IACJH,EAAAA,GAAQI,MAAM,UAAUD,EAAaH,UAAU,GAE3D,KAwBQZ,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,OAAQZ,EAA2Ba,SAAS,YAL3C9B,EAQtB,C","sources":["webpack://min-svenska/./www/page/cms/cms-article/cms-article-edit/cms-article-edit.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport {Typography, message} from 'antd';\nimport {useParams} from 'react-router-dom';\n\nimport {CmsArticle} from '../cms-article';\nimport {CmsArticleModeEnum} from '../cms-article-const';\nimport {ArticleType} from '../../../../../server/article/article-type';\nimport {getArticleListPagination, postArticleUpdate} from '../../../../service/article/article-api';\nimport {useMakeExecutableState} from '../../../../util/function';\nimport {Spinner} from '../../../../layout/spinner/spinner';\nimport {CmsPage} from '../../layout/cms-page/cms-page';\nimport {PaginationResultType} from '../../../../../server/data-base/data-base-type';\nimport {IsRender} from '../../../../layout/is-render/is-render';\n\nconst {Title} = Typography;\n\nexport function CmsArticleEdit(): JSX.Element {\n    const {articleId} = useParams<'articleId'>();\n\n    const {\n        execute: articleById,\n        isInProgress: isInProgressArticleById,\n        result: articleByIdResult,\n    } = useMakeExecutableState<Parameters<typeof getArticleListPagination>, PaginationResultType<ArticleType>>(\n        getArticleListPagination\n    );\n\n    useEffect(() => {\n        articleById(\n            {id: articleId || ''},\n            {\n                pageIndex: 0,\n                pageSize: 1,\n                sort: {title: 1},\n            }\n        );\n    }, [articleById, articleId]);\n\n    const {execute: updateArticle, isInProgress: isInProgressUpdateArticle} = useMakeExecutableState<\n        Parameters<typeof postArticleUpdate>,\n        ArticleType\n    >(postArticleUpdate);\n\n    function handleOnFinish(article: ArticleType) {\n        updateArticle(article)\n            .then((savedArticle: ArticleType) => {\n                console.log(savedArticle);\n                message.success('Article has been updated!');\n            })\n            .catch((requestError: Error) => {\n                message.error(`ERROR: ${requestError.message}`);\n            });\n    }\n\n    const articleToEdit: ArticleType | null = articleByIdResult?.list[0] || null;\n\n    if (articleToEdit === null) {\n        return (\n            <CmsPage key=\"no-article\">\n                <IsRender isRender={isInProgressArticleById}>\n                    <Title level={2}>Edit an article: {articleId}</Title>\n                    <Spinner isShow={isInProgressArticleById} position=\"fixed\" />\n                </IsRender>\n                <IsRender isRender={!isInProgressArticleById}>\n                    <Title level={2}>Can not found article by id: {articleId}</Title>\n                </IsRender>\n            </CmsPage>\n        );\n    }\n\n    return (\n        <CmsPage key={articleId}>\n            <Title level={2}>\n                Edit an article: {articleToEdit.title} - {articleId}\n            </Title>\n            <CmsArticle article={articleToEdit} mode={CmsArticleModeEnum.edit} onFinish={handleOnFinish} />\n            <Spinner isShow={isInProgressUpdateArticle} position=\"fixed\" />\n        </CmsPage>\n    );\n}\n"],"names":["Title","Typography","CmsArticleEdit","articleId","useParams","execute","articleById","isInProgress","isInProgressArticleById","result","articleByIdResult","useMakeExecutableState","getArticleListPagination","useEffect","id","pageIndex","pageSize","sort","title","updateArticle","isInProgressUpdateArticle","postArticleUpdate","articleToEdit","list","_jsxs","CmsPage","children","IsRender","isRender","level","_jsx","Spinner","isShow","position","CmsArticle","article","mode","CmsArticleModeEnum","edit","onFinish","then","savedArticle","message","success","catch","requestError","error"],"sourceRoot":""}